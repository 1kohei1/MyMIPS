21080001	# addi $8, $8, 1		r8 = 1      			$t0 = 1 
21090002	# addi $9, $8, 2		r9 = r8 + 2 = 3			$t1 = 3
01095022	# sub $10, $8, $9		r10 = r8 - r9 = -2		$t2 = -2
01285022	# sub $10, $9, $8		r10 = r9 - r8 = 2		$t2 = 2
01494024	# and $8, $10, $9		r8 = r10 & r9			$t0 = 2
01494025	# or $8, $10, $9		r8 = r10 | r9			$t0 = 3
2928FFFB	# slti $8, $9, -5						$t0 = 1
2D28FFFB	# sltu $8, $9, 65531						$t0 = 0
afaa0000	# sw $10, 0(29)        		Mem[sp+0] = r10			
8fab0000	# lw $11, 0(29) 	      	r11= Mem[sp+0] = 4		$t3 = 4
016a602a	# slt t12, t11, t10    		if(r11<r10) then r12=0 = 0	$t4 = 0
012a682b	# sltu t13, t10, t9  		if(r9<r10) then r13=1 = 1	$t5 = 1
3c0e0020	# lui $14, 32							$t6 = 0x00200000
08001010	# j end		      		jump over the bad instructions
deadbeaf	# label: bad instr
badabeaf	# bad instr
114bfffd	# end: beq $10, $11, label   	(r10==r11) will branch back and halt 